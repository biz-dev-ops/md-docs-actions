name: md-docs Azure deploy

description: Deploy generated website to Azure.

author: Arjan Geertsema

inputs:
  
  credentials:
    description: Azure credentials used to login.
    required: true

  storage_account:
    description: Name of the Azure storage account whree the container is located.
    required: true

  storage_container:
    description: Name of the Azure storage container where to upload the generated website.
    required: true

  storage_bucket:
    description: Directory where to deploy the generated website in the container. Defaults to empty which is the root.
    required: false

  cdn_resource_group:
    description: Name of the Azure resource group where the CDN is located.
    required: true

  cdn_profile:
    description: Name of the Azure CDN profile which is linked to the storage container.
    required: true

  cdn_endpoint:
    description: Name of the Azure CDN endpoint which is linked to the storage container.
    required: true

  working_directory:
    description: Working directory path.
    required: false
    default: ./

runs:

  using: composite
  
  steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.credentials }}

    - name: Deploy to Azure
      if:  ${{ inputs.storage_bucket == null || inputs.storage_bucket  == '' }}
      uses: azure/CLI@v1
      env:
        STORAGE_ACCOUNT: ${{ inputs.storage_account }}
        STORAGE_CONTAINER: ${{ inputs.storage_container }}
        CDN_RESOURCE_GROUP: ${{ inputs.cdn_resource_group }}
        CDN_PROFILE: ${{ inputs.cdn_profile }}
        CDN_ENDPOINT: ${{ inputs.cdn_endpoint }}
        SOURCE: ${{ inputs.working_directory }} + 'dist/*'
      with:
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az storage container create -n "$STORAGE_CONTAINER" --account-name "$STORAGE_ACCOUNT" --public-access container --auth-mode login
          az storage azcopy blob delete -c "$STORAGE_CONTAINER" --account-name "$STORAGE_ACCOUNT" --recursive
          az storage azcopy blob upload -c "$STORAGE_CONTAINER" -s "${SOURCE}" --account-name "$STORAGE_ACCOUNT" --recursive
          az cdn endpoint purge --content-paths  "/*" --profile-name "$CDN_PROFILE" --name "$CDN_ENDPOINT" --resource-group "$CDN_RESOURCE_GROUP"

    - name: Deploy bucket to Azure
      if: ${{ inputs.storage_bucket != null && inputs.storage_bucket != '' }}
      uses: azure/CLI@v1
      env:
        STORAGE_ACCOUNT: ${{ inputs.storage_account }}
        STORAGE_CONTAINER: ${{ inputs.storage_container }}
        STORAGE_BUCKET: ${{ inputs.storage_bucket }}
        CDN_RESOURCE_GROUP: ${{ inputs.cdn_resource_group }}
        CDN_PROFILE: ${{ inputs.cdn_profile }}
        CDN_ENDPOINT: ${{ inputs.cdn_endpoint }}
        SOURCE: ${{ inputs.working_directory }} + 'dist/*'
      with:
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az storage container create -n "$STORAGE_CONTAINER" --account-name "$STORAGE_ACCOUNT" --public-access container --auth-mode login
          az storage azcopy blob delete -c "$STORAGE_CONTAINER" -t "$STORAGE_BUCKET" --account-name "$STORAGE_ACCOUNT" --recursive
          az storage azcopy blob upload -c "$STORAGE_CONTAINER" -s "${SOURCE}" -d "$STORAGE_BUCKET" --account-name "$STORAGE_ACCOUNT" --recursive
          az cdn endpoint purge --content-paths "/$STORAGE_BUCKET/*" --profile-name "$CDN_PROFILE" --name "$CDN_ENDPOINT" --resource-group "$CDN_RESOURCE_GROUP"

    - name: Azure logout
      if: always()
      uses: azure/CLI@v1
      with:
        inlineScript: az logout
